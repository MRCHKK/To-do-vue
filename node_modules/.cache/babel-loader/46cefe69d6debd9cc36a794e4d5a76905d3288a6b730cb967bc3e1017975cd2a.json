{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center mt-5\"\n}, \" Vue Todo App \", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"input-container\"\n};\nconst _hoisted_4 = {\n  class: \"table table-bordered mt-3\"\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Task\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\"\n}, \"Status\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"text-center\"\n}, \"Edit\"), /*#__PURE__*/_createElementVNode(\"th\", {\n  scope: \"col\",\n  class: \"text-center\"\n}, \"Delete\")])], -1 /* HOISTED */);\nconst _hoisted_6 = [\"textContent\"];\nconst _hoisted_7 = [\"textContent\"];\nconst _hoisted_8 = [\"onClick\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"fa fa-pen\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_10 = [_hoisted_9];\nconst _hoisted_11 = [\"onClick\"];\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"fa fa-trash\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_13 = [_hoisted_12];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.task = $event),\n    type: \"text\",\n    placeholder: \"Enter task\",\n    onKeydown: _cache[1] || (_cache[1] = _withKeys((...args) => $options.saveInput && $options.saveInput(...args), [\"enter\"]))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.task]]), _createElementVNode(\"button\", {\n    class: \"btn btn-warning rounded-2 mt+3\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.saveInput && $options.saveInput(...args))\n  }, \"Zapisz\")]), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.tasks, (task, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", {\n      textContent: _toDisplayString(task.name)\n    }, null, 8 /* PROPS */, _hoisted_6), _createElementVNode(\"td\", {\n      textContent: _toDisplayString(task.status)\n    }, null, 8 /* PROPS */, _hoisted_7), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      style: {\n        \"cursor\": \"pointer\"\n      },\n      class: \"text-center siema\",\n      onClick: $event => $options.editTask(index)\n    }, [..._hoisted_10], 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      \"cursor:\": \"\",\n      pointer: \"\",\n      class: \"text-center\",\n      onClick: $event => $options.deleteTask(index)\n    }, [..._hoisted_13], 8 /* PROPS */, _hoisted_11)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","scope","_hoisted_9","_hoisted_12","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$data","task","$event","type","placeholder","onKeydown","_cache","_withKeys","args","$options","saveInput","onClick","_hoisted_4","_hoisted_5","_Fragment","_renderList","tasks","index","key","_toDisplayString","name","status","style","editTask","pointer","deleteTask"],"sources":["C:\\todo\\todo-app\\src\\components\\ToDoApp.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n\n    <h2 class=\"text-center mt-5\">\n      Vue Todo App\n    </h2>\n\n    <div class=\"input-container\">\n      <input v-model=\"task\" type=\"text\" placeholder=\"Enter task\" @keydown.enter=\"saveInput\">\n      <button class=\"btn btn-warning rounded-2 mt+3\" @click=\"saveInput\" >Zapisz</button>\n    </div>\n    <table class=\"table table-bordered mt-3\">\n  <thead>\n    <tr>\n      <th scope=\"col\">Task</th>\n      <th scope=\"col\">Status</th>\n      <th scope=\"col\" class=\"text-center\">Edit</th>\n      <th scope=\"col\" class=\"text-center\">Delete</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr v-for=\"(task, index) in tasks\" :key=\"index\">\n      <td v-text=\"task.name\"></td>\n      <td v-text=\"task.status\"></td>\n      <td>\n        <div style=\"cursor:pointer;\" class=\"text-center siema\" @click=\"editTask(index)\">\n          <span class=\"fa fa-pen\"></span>\n        </div>\n      </td>\n      <td>\n        <div cursor: pointer class=\"text-center\" @click=\"deleteTask(index)\">\n          <span class=\"fa fa-trash\"></span>\n        </div>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'app',\n  data() {\n    return {\n      task: '',\n      editedTask: null,\n      tasks: JSON.parse(localStorage.getItem('tasks')) ?? [\n        {\n          name: 'Tylko małpy robią frontend',\n          status: 'To-do',\n        },\n        {\n          name: 'Frątasie do spania',\n          status: 'to-do',\n        },\n      ],\n    };\n  },\n  methods: {\n    saveToLocalStorage() {\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    saveInput() {\n      if (!this.task.length) return;\n      if (this.editedTask === null) {\n        this.tasks.push({\n          name: this.task,\n          status: 'To-Do',\n        });\n        this.saveToLocalStorage();\n        return;\n      }\n      this.saveToLocalStorage();\n      this.tasks[this.editedTask].name = this.task;\n      this.editedTask = null;\n      this.task = '';\n    },\n    deleteTask(index) {\n      this.tasks.splice(index, 1);\n      this.saveToLocalStorage();\n    },\n    editTask(index) {\n      this.task = this.tasks[index].name;\n      this.editedTask = index;\n      this.saveToLocalStorage();\n    },\n  },\n};\n</script>\n\n<style>\n.siema {\n  color: black !important;\n}\n.input-container {\n  margin-top: 40px;\n  text-align: center;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;gCAEpBC,mBAAA,CAEK;EAFDD,KAAK,EAAC;AAAkB,GAAC,gBAE7B;;EAEKA,KAAK,EAAC;AAAiB;;EAIrBA,KAAK,EAAC;AAA2B;gCAC1CC,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAyB;EAArBC,KAAK,EAAC;AAAK,GAAC,MAAI,G,aACpBD,mBAAA,CAA2B;EAAvBC,KAAK,EAAC;AAAK,GAAC,QAAM,G,aACtBD,mBAAA,CAA6C;EAAzCC,KAAK,EAAC,KAAK;EAACF,KAAK,EAAC;GAAc,MAAI,G,aACxCC,mBAAA,CAA+C;EAA3CC,KAAK,EAAC,KAAK;EAACF,KAAK,EAAC;GAAc,QAAM,E;;;;gCAStCC,mBAAA,CAA+B;EAAzBD,KAAK,EAAC;AAAW;qBAAvBG,UAA+B,C;;iCAK/BF,mBAAA,CAAiC;EAA3BD,KAAK,EAAC;AAAa;qBAAzBI,WAAiC,C;;uBA9BzCC,mBAAA,CAsCM,OAtCNC,UAsCM,GApCJC,UAEK,EAELN,mBAAA,CAGM,OAHNO,UAGM,G,gBAFJP,mBAAA,CAAsF;+DAAtEQ,KAAA,CAAAC,IAAI,GAAAC,MAAA;IAAEC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,YAAY;IAAEC,SAAO,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;iEAApER,KAAA,CAAAC,IAAI,E,GACpBT,mBAAA,CAAkF;IAA1ED,KAAK,EAAC,gCAAgC;IAAEoB,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAG,QAAM,E,GAE3EhB,mBAAA,CAyBI,SAzBJoB,UAyBI,GAxBNC,UAOQ,EACRrB,mBAAA,CAeQ,iB,kBAdNI,mBAAA,CAaKkB,SAAA,QAAAC,WAAA,CAbuBf,KAAA,CAAAgB,KAAK,GAArBf,IAAI,EAAEgB,KAAK;yBAAvBrB,mBAAA,CAaK;MAb+BsB,GAAG,EAAED;IAAK,IAC5CzB,mBAAA,CAA4B;mBAAxB2B,gBAAA,CAAQlB,IAAI,CAACmB,IAAI;yCACrB5B,mBAAA,CAA8B;mBAA1B2B,gBAAA,CAAQlB,IAAI,CAACoB,MAAM;yCACvB7B,mBAAA,CAIK,aAHHA,mBAAA,CAEM;MAFD8B,KAAuB,EAAvB;QAAA;MAAA,CAAuB;MAAC/B,KAAK,EAAC,mBAAmB;MAAEoB,OAAK,EAAAT,MAAA,IAAEO,QAAA,CAAAc,QAAQ,CAACN,KAAK;uDAI/EzB,mBAAA,CAIK,aAHHA,mBAAA,CAEM;MAFD,SAAO,EAAP,EAAO;MAACgC,OAAO,EAAP,EAAO;MAACjC,KAAK,EAAC,aAAa;MAAEoB,OAAK,EAAAT,MAAA,IAAEO,QAAA,CAAAgB,UAAU,CAACR,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}